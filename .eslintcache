[{"/Users/mikaeljuntti/repos/record-collector-app/src/index.js":"1","/Users/mikaeljuntti/repos/record-collector-app/src/reportWebVitals.js":"2","/Users/mikaeljuntti/repos/record-collector-app/src/App.tsx":"3","/Users/mikaeljuntti/repos/record-collector-app/src/Components/Collections.tsx":"4","/Users/mikaeljuntti/repos/record-collector-app/src/Components/Header.tsx":"5","/Users/mikaeljuntti/repos/record-collector-app/src/Components/Login.tsx":"6","/Users/mikaeljuntti/repos/record-collector-app/src/Components/records/RecordsTable.tsx":"7","/Users/mikaeljuntti/repos/record-collector-app/src/Components/records/AddRecord.tsx":"8","/Users/mikaeljuntti/repos/record-collector-app/src/Api/Api.tsx":"9"},{"size":547,"mtime":1607976008491,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607976008492,"results":"12","hashOfConfig":"11"},{"size":941,"mtime":1607976008488,"results":"13","hashOfConfig":"11"},{"size":1376,"mtime":1607979419843,"results":"14","hashOfConfig":"11"},{"size":200,"mtime":1607976008489,"results":"15","hashOfConfig":"11"},{"size":2140,"mtime":1607976008489,"results":"16","hashOfConfig":"11"},{"size":2686,"mtime":1607980441756,"results":"17","hashOfConfig":"11"},{"size":3571,"mtime":1607980565487,"results":"18","hashOfConfig":"11"},{"size":536,"mtime":1607979682063,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"z3kdk4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/mikaeljuntti/repos/record-collector-app/src/index.js",[],["41","42"],"/Users/mikaeljuntti/repos/record-collector-app/src/reportWebVitals.js",[],"/Users/mikaeljuntti/repos/record-collector-app/src/App.tsx",[],["43","44"],"/Users/mikaeljuntti/repos/record-collector-app/src/Components/Collections.tsx",[],"/Users/mikaeljuntti/repos/record-collector-app/src/Components/Header.tsx",[],"/Users/mikaeljuntti/repos/record-collector-app/src/Components/Login.tsx",[],"/Users/mikaeljuntti/repos/record-collector-app/src/Components/records/RecordsTable.tsx",["45"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react';\nimport api from './../../Api/Api';\nimport AddRecord from './AddRecord';\n\nconst RecordsTable = () => {\n  const recordInitState = {\n    artist: '',\n    title: '',\n    imageUrls: [],\n    year: null,\n  };\n  const [records, setRecords] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedRecord, setSelectedRecord] = useState(recordInitState);\n  useEffect(() => {\n    api.getRecords().then((res) => {\n      setRecords(res.data.records);\n    });\n  }, []);\n\n  const addItem = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseClick = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div>\n      {selectedRecord.title ? (\n        <div>\n          <h4>\n            {selectedRecord!.artist} - {selectedRecord!.title} (\n            {selectedRecord!.year})\n          </h4>\n          <img src={'/assets/img/' + selectedRecord.imageUrls[0]} />\n          <button\n            className=\"btn btn-secondary\"\n            onClick={() => setSelectedRecord(recordInitState)}\n          >\n            Prev\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            onClick={() => setSelectedRecord(recordInitState)}\n          >\n            Next\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            onClick={() => setSelectedRecord(recordInitState)}\n          >\n            Back\n          </button>\n        </div>\n      ) : (\n        <div>\n          <h4>\n            <FontAwesomeIcon className=\"mr-2\" icon=\"record-vinyl\" />\n            Min skivsamling\n          </h4>\n          <div className=\"text-right\">\n            <button className=\"btn btn-primary\" onClick={() => addItem()}>\n              Add item\n            </button>\n          </div>\n          <table className=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>Artist</th>\n                <th>Album</th>\n                <th>Year</th>\n              </tr>\n            </thead>\n            <tbody>\n              {records.map((record: any, idx: number) => (\n                <tr\n                  key={idx}\n                  onClick={() => setSelectedRecord({ ...record, idx })}\n                >\n                  <td>{record.artist}</td>\n                  <td>{record.title}</td>\n                  <td>{record.year}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n      <AddRecord\n        showModal={showModal}\n        onChildClick={() => handleCloseClick()}\n      ></AddRecord>\n    </div>\n  );\n};\n\nexport default RecordsTable;\n","/Users/mikaeljuntti/repos/record-collector-app/src/Components/records/AddRecord.tsx",[],"/Users/mikaeljuntti/repos/record-collector-app/src/Api/Api.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":38,"column":11,"nodeType":"52","endLine":38,"endColumn":69},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]